apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: buildah-vite
  namespace: f6e00d-tools
spec:
  params:
    - name: IMAGE
      type: string
    - name: IMAGE_TAG
      type: string
    - name: BUILDAH_IMAGE
      type: string
    - name: STORAGE_DRIVER
      type: string
      default: overlay
    - name: DOCKERFILE
      type: string
      default: ./Dockerfile
    - name: CONTEXT
      type: string
      default: .
    - name: IMAGE_REGISTRY
      type: string
      default: docker.io
    - name: IMAGE_REGISTRY_USER
      type: string
      default: image-registry-username
    - name: IMAGE_REGISTRY_PASS
      type: string
      default: image-registry-password
  steps:
    - name: build
      image: $(params.BUILDAH_IMAGE)
      script: |
        #!/usr/bin/env bash
        set -x

        # Login to the registry using credentials from secrets
        buildah login -u $IMAGE_REGISTRY_USER -p $IMAGE_REGISTRY_PASS $(params.IMAGE_REGISTRY)

        # Build the image, pass the environment variables as build args
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud --no-cache \
          --build-arg VITE_API_URL=$(VITE_API_URL) \
          --build-arg VITE_BCSC_CLIENT_ID=$(VITE_BCSC_CLIENT_ID) \
          --build-arg VITE_BCSC_AUTHORITY=$(VITE_BCSC_AUTHORITY) \
          -f $(params.DOCKERFILE) -t $(params.IMAGE_REGISTRY)/$(params.IMAGE):$(params.IMAGE_TAG) \
          --isolation chroot $(params.CONTEXT)

        # Push the image
        buildah --storage-driver=$(params.STORAGE_DRIVER) push $(params.IMAGE_REGISTRY)/$(params.IMAGE):$(params.IMAGE_TAG)

      env:
        - name: VITE_API_URL
          valueFrom:
            secretKeyRef:
              key: VITE_API_URL
              name: vite-secrets
        - name: VITE_BCSC_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: VITE_BCSC_CLIENT_ID
              name: vite-secrets
        - name: VITE_BCSC_AUTHORITY
          valueFrom:
            secretKeyRef:
              key: VITE_BCSC_AUTHORITY
              name: vite-secrets
    - name: trivy-scan
      image: docker.io/aquasec/trivy
      script: |
        trivy image $(params.IMAGE_REGISTRY)/$(params.IMAGE):latest
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
    - name: push
      image: $(params.BUILDAH_IMAGE)
      script: |
        buildah login -u $IMAGE_REGISTRY_USER -p $IMAGE_REGISTRY_PASS $(params.IMAGE_REGISTRY) > /dev/null
        buildah --storage-driver=$(params.STORAGE_DRIVER) push $(params.IMAGE_REGISTRY)/$(params.IMAGE):$(params.IMAGE_TAG)
  volumes:
    - emptyDir: {}
      name: varlibcontainers
